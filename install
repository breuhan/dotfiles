#!/usr/bin/env bash

#
# Update git submodules
#

echo ">> Updating all git submodules"
git submodule update --init --recursive

#
# Link all dotfiles from the current directory
#

echo ">> Creating all symlinks"

toDir=$(pwd)
fromDir=~/

for dir in $(ls -a1); do
    # Skip "." and ".."
    if [ "${dir}" == "." ] || [ "${dir}" == ".." ]; then
        continue
    fi

    # Skip some git files that are specific to this repository
    if [ "${dir}" == ".git" ] \
    || [ "${dir}" == ".gitmodules" ] \
    || [ "${dir}" == ".gitignore" ] \
    || [ "${dir}" == ".gitattributes" ]; then
        continue
    fi

    # Skip all "normal" (non hidden) files
    if [ "${dir:0:1}" != "." ]; then
        continue
    fi

    echo "Creating symlink for: ${dir}"

    linkFrom="${fromDir}/${dir}"
    linkTo="${toDir}/${dir}"

    rm -rf "${linkFrom}"
    ln -s "${linkTo}" "${linkFrom}"
done

#
# Link the keyboard layout under OSX
#

fromDir=~/Library/Keyboard\ Layouts/
layoutFile=$(ls -1 *.keylayout)

if [ -e "${fromDir}" ]; then
    echo "Creating symlink for: ${layoutFile}"
    rm -rf "${fromDir}/${layoutFile}"
    ln -s "${toDir}/${layoutFile}" "${fromDir}/${layoutFile}"
fi

#
# Install all required gems if possible
#

echo ">> Install required gems (e.g. for some vim plugins)"

type bundle > /dev/null
bundleInstalled=$?

type gem > /dev/null
gemsInstalled=$?

if [ ! $bundleInstalled ] && [ ! $gemsInstalled ]; then
    echo "!! Bundler AND gems missing"
    echo "!! Please install at least gems and run this script again."
    exit 1
fi

if [ ! $bundleInstalled ]; then
    echo "!! Bundler is missing .. i'll now try to install bundler for you"
    gem install bundler

    if [ $? -ne 0 ]; then
        echo "!! Something went wrong"
        exit 1
    fi
fi

bundle

#
# Done! :D
#
echo ">> Done"
